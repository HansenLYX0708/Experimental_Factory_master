# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'GUIMain.ui'
#
# Created by: PyQt5 UI code generator 5.15.4
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets


class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.setWindowModality(QtCore.Qt.NonModal)
        MainWindow.resize(733, 453)
        MainWindow.setMinimumSize(QtCore.QSize(612, 453))
        MainWindow.setMaximumSize(QtCore.QSize(800, 453))
        MainWindow.setWindowOpacity(1.0)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.gridLayoutWidget = QtWidgets.QWidget(self.centralwidget)
        self.gridLayoutWidget.setGeometry(QtCore.QRect(9, 9, 591, 431))
        self.gridLayoutWidget.setObjectName("gridLayoutWidget")
        self.gridLayout = QtWidgets.QGridLayout(self.gridLayoutWidget)
        self.gridLayout.setContentsMargins(0, 0, 0, 0)
        self.gridLayout.setObjectName("gridLayout")
        self.pB_GetWeather = QtWidgets.QPushButton(self.gridLayoutWidget)
        self.pB_GetWeather.setMinimumSize(QtCore.QSize(0, 200))
        self.pB_GetWeather.setLayoutDirection(QtCore.Qt.LeftToRight)
        self.pB_GetWeather.setObjectName("pB_GetWeather")
        self.gridLayout.addWidget(self.pB_GetWeather, 0, 0, 1, 1)
        self.pushButton_4 = QtWidgets.QPushButton(self.gridLayoutWidget)
        self.pushButton_4.setMinimumSize(QtCore.QSize(0, 200))
        self.pushButton_4.setObjectName("pushButton_4")
        self.gridLayout.addWidget(self.pushButton_4, 1, 0, 1, 1)
        self.pB_Timelapse = QtWidgets.QPushButton(self.gridLayoutWidget)
        self.pB_Timelapse.setMinimumSize(QtCore.QSize(0, 200))
        self.pB_Timelapse.setObjectName("pB_Timelapse")
        self.gridLayout.addWidget(self.pB_Timelapse, 0, 1, 1, 1)
        self.label = QtWidgets.QLabel(self.gridLayoutWidget)
        self.label.setMinimumSize(QtCore.QSize(291, 200))
        self.label.setMaximumSize(QtCore.QSize(291, 200))
        self.label.setObjectName("label")
        self.gridLayout.addWidget(self.label, 1, 1, 1, 1)
        self.verticalLayoutWidget = QtWidgets.QWidget(self.centralwidget)
        self.verticalLayoutWidget.setGeometry(QtCore.QRect(609, 10, 121, 421))
        self.verticalLayoutWidget.setObjectName("verticalLayoutWidget")
        self.verticalLayout = QtWidgets.QVBoxLayout(self.verticalLayoutWidget)
        self.verticalLayout.setContentsMargins(0, 0, 0, 0)
        self.verticalLayout.setObjectName("verticalLayout")
        self.pB_Exit = QtWidgets.QPushButton(self.verticalLayoutWidget)
        self.pB_Exit.setMinimumSize(QtCore.QSize(0, 400))
        self.pB_Exit.setObjectName("pB_Exit")
        self.verticalLayout.addWidget(self.pB_Exit)
        MainWindow.setCentralWidget(self.centralwidget)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "HomeSmartCenter"))
        self.pB_GetWeather.setText(_translate("MainWindow", "Get Weather"))
        self.pushButton_4.setText(_translate("MainWindow", "PushButton"))
        self.pB_Timelapse.setText(_translate("MainWindow", "Time-lapse photography"))
        self.label.setText(_translate("MainWindow", "TextLabel"))
        self.pB_Exit.setText(_translate("MainWindow", "Exit"))

if __name__ == '__main__':
    import sys
    from PyQt5.QtWidgets import QApplication, QMainWindow
    import default

    app = QApplication(sys.argv)
    MainWindow = QMainWindow()
    ui = Ui_MainWindow()
    ui.setupUi(MainWindow)
    MainWindow.show()
    sys.exit(app.exec_())